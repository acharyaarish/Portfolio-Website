{"version":3,"file":"static/js/284.d095b904.chunk.js","mappings":"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","sources":["components/About.js","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/grid.tsx","../node_modules/@chakra-ui/layout/src/simple-grid.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Container,\n  Heading,\n  Text,\n  Image,\n  SimpleGrid,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\nconst About = () => {\n  // Define color scheme based on the provided palettes\n  const bg = useColorModeValue('#f0f4f8', '#19181A'); // Light or Dark background color\n  const textColor = useColorModeValue('#19181A', '#E2E8F0');\n  const headingColor = useColorModeValue('#E7717D', '#CEBC81');\n  const subHeadingColor = useColorModeValue('#CEBC81', '#FFD700');\n  const descriptionColor = useColorModeValue('#333', '#ddd');\n  const highlightColor = useColorModeValue('#A16E83', '#FFD700');\n\n  // Animation variants for the container transitions\n  const containerVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  return (\n    <Box\n      id=\"about\"\n      bg={bg}\n      color={textColor}\n      py={16} // Increased padding at the top and bottom\n      as={motion.div}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={containerVariants}\n      transition={{ duration: 0.5, ease: 'easeInOut' }}\n      boxShadow=\"lg\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Container maxW=\"container.lg\" textAlign=\"center\" py={0}>\n        <Heading\n          as={motion.h2}\n          size=\"2xl\"\n          mb={6}\n          color={headingColor}\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          About Me <span role=\"img\" aria-label=\"wave\">ðŸ‘‹</span>\n        </Heading>\n        <Text fontSize=\"xl\" mb={4} color={subHeadingColor} fontWeight=\"semibold\">\n          Data Science Enthusiast <span role=\"img\" aria-label=\"computer\">ðŸ’»</span>\n        </Text>\n        <Text fontSize=\"lg\" mb={10} color={descriptionColor} maxW=\"container.md\" mx=\"auto\">\n          I'm Arish, a data science student passionate about transforming data into actionable insights. I specialize in <Text as=\"span\" fontWeight=\"bold\" color={highlightColor}>Data Analytics, Research, and Cloud Services</Text>. My goal is to use data to drive strategic decisions and create impactful solutions.\n        </Text>\n        <SimpleGrid columns={{ base: 1, md: 3 }} spacing={10} mb={6}>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Image\n              as={motion.img}\n              src=\"https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif\"\n              alt=\"Cat Typing\"\n              borderRadius=\"lg\"\n              boxSize=\"150px\"\n              objectFit=\"cover\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.3 }}\n            />\n            <Text mt={2} color={descriptionColor}>Hard at work!</Text>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Image\n              as={motion.img}\n              src=\"https://media.giphy.com/media/26tPplGWjN0xLybiU/giphy.gif\"\n              alt=\"Data Analysis\"\n              borderRadius=\"lg\"\n              boxSize=\"150px\"\n              objectFit=\"cover\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.6 }}\n            />\n            <Text mt={2} color={descriptionColor}>Data crunching time!</Text>\n          </Box>\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Image\n              as={motion.img}\n              src=\"https://media.giphy.com/media/3o6Zt8MgUuvSbkZYWc/giphy.gif\"\n              alt=\"Enjoying Data\"\n              borderRadius=\"lg\"\n              boxSize=\"150px\"\n              objectFit=\"cover\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.9 }}\n            />\n            <Text mt={2} color={descriptionColor}>Having fun with data!</Text>\n          </Box>\n        </SimpleGrid>\n        <Text\n          as={motion.p}\n          fontSize=\"lg\"\n          color={highlightColor}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1, delay: 0.9 }}\n        >\n          \"To analyze or not to analyze, that is the question!\" <span role=\"img\" aria-label=\"thinking\">ðŸ¤”</span>\n        </Text>\n      </Container>\n    </Box>\n  );\n};\n\nexport default About;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n"],"names":["About","bg","useColorModeValue","textColor","headingColor","subHeadingColor","descriptionColor","highlightColor","_jsx","Box","id","color","py","as","motion","div","initial","animate","variants","hidden","opacity","y","visible","transition","duration","ease","boxShadow","borderRadius","overflow","children","_jsxs","Container","maxW","textAlign","Heading","h2","size","mb","role","Text","fontSize","fontWeight","mx","SimpleGrid","columns","base","md","spacing","display","flexDirection","alignItems","Image","img","src","alt","boxSize","objectFit","delay","mt","p","forwardRef","props","ref","className","centerContent","rest","omitThemingProps","styles","useStyleConfig","jsx","chakra","cx","__css","displayName","Grid","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","spacingX","spacingY","minChildWidth","theme","useTheme","width","mapResponsive","value","_value","getToken","n","concat","widthToColumns","count"],"sourceRoot":""}